<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Posts on Hegzploit</title><link>https://hegzploit.github.io/posts/</link><description>Recent content in Posts on Hegzploit</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>me (AT) this domain (Yusuf Hegazy)</managingEditor><webMaster>me (AT) this domain (Yusuf Hegazy)</webMaster><copyright>Â©2024, All Rights Reserved</copyright><lastBuildDate>Sat, 28 Dec 2024 00:00:00 +0000</lastBuildDate><sy:updatePeriod>weekly</sy:updatePeriod><atom:link href="https://hegzploit.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>0xL4ugh24 Hardware Challenges Official Writeups</title><link>https://hegzploit.github.io/posts/0xl4ugh24-hw-writeups/</link><pubDate>Sat, 28 Dec 2024 00:00:00 +0000</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Sat, 28 Dec 2024 00:00:00 +0000</atom:modified><guid>https://hegzploit.github.io/posts/0xl4ugh24-hw-writeups/</guid><description>&lt;p>Lately, I have been doing some hardware security research, specifically focusing on side channel stuff, this inspired me to write these challenges for the 0xL4ugh CTF.&lt;/p>
&lt;div class="box">You will find all the challenge files on &lt;a href="https://github.com/hegzploit/0xL4ugh24_HW_Challs">this repo&lt;/a>, at the end of the blog I will list some notable writeups by players who have completed this challenge.&lt;/div>
&lt;p>&lt;img src="https://hegzploit.github.io/posts/0xl4ugh24-hw-writeups/assets/challs.jpg" alt="">&lt;/p>
&lt;h2 id="tempus">Tempus&lt;/h2>
&lt;div class="box">&lt;em>Summary:&lt;/em> Timing side channel attack allows us to bruteforce the pin digit by digit reducing the keyspace significantly (from 10^9 to 10*9).&lt;/div>
&lt;div class="notices info" data-title="Fun fact">
Tempus is the latin word for time
&lt;/div>
&lt;br>
&lt;p>&lt;img src="https://hegzploit.github.io/posts/0xl4ugh24-hw-writeups/assets/tempus-desc.jpg" alt="">&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator><media:content url="https://hegzploit.github.io/images/thumbnails/0xl4ugh24-hw2.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content><category>hardware</category><category>SCA</category></item><item><title>Low Budget Router</title><link>https://hegzploit.github.io/posts/lbr/</link><pubDate>Sun, 03 Dec 2023 00:00:00 +0000</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Sun, 03 Dec 2023 00:00:00 +0000</atom:modified><guid>https://hegzploit.github.io/posts/lbr/</guid><description>&lt;p>In this blog post, we&amp;rsquo;ll explore three challenges from the &amp;ldquo;Not Vulnerability Research&amp;rdquo; category in CyCTF'23, held in Cairo ICT.&lt;/p>
&lt;p>I managed to solve the first challenge during the CTF, and solved the remaining two afterwards. Be sure to check out &lt;a href="https://wr3nchsr.github.io/cyctf-low-budget-router-trilogy-writeup/">the official writeup by the author&lt;/a>. As of writing this, I haven&amp;rsquo;t read the author&amp;rsquo;s writeup to avoid being influenced by the intended solutions. Instead, I&amp;rsquo;ll guide you through my methodology and approach for solving these three challenges. Expect a long (but fun) ride, so prepare a cup of tea and enjoy the read!&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator><media:content url="https://hegzploit.github.io/images/thumbnails/lbr.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>hardware</category></item><item><title>Reactive Vault 1</title><link>https://hegzploit.github.io/posts/reactive-vault-1/</link><pubDate>Sun, 05 Nov 2023 00:00:00 +0000</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Sun, 05 Nov 2023 00:00:00 +0000</atom:modified><guid>https://hegzploit.github.io/posts/reactive-vault-1/</guid><description>&lt;p>I started by installing the APK on an android phone, once opened it will show a text field to enter a key and a login button, the APK will try to navigate to &lt;code>https://you-shall-not-pass&lt;/code> when trying to type any key (maybe this was done to prevent bruteforcing the key?), finally, when you try to login with a random key It will show a dialog saying &amp;ldquo;BAAAD Key&amp;rdquo;&lt;/p>
&lt;center>
&lt;video controls loop width="320">
&lt;source src="./demo.mp4" type="video/mp4">
&lt;/video>
&lt;/center>
&lt;p>I dropped the APK within jadx and I went to the entry point which is &lt;code>com.expor4bb1t.AwesomeProject.MainActivity&lt;/code>, I could see a lot of imports related to facebook and react, which along with the challenge name, started making sense. This application is built with react native.&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator><media:content url="https://hegzploit.github.io/images/thumbnails/reactive-vault.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>CTF</category></item><item><title>An Electrical Engineer's Adventure into the Deep Dark of AI</title><link>https://hegzploit.github.io/posts/gp/</link><pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Sun, 18 Jun 2023 00:00:00 +0000</atom:modified><guid>https://hegzploit.github.io/posts/gp/</guid><description>&lt;p>This is a blog post about my graduation project, where I went for a little dive within the scary realm of AI. I had zero practical experience with AI prior and had only a minimal theoretical understanding of some concepts. While this work may not seem like much, this was a rough ride for me, and I can confidently say that it was worth it. I couldn&amp;rsquo;t have had the opportunity to do this type of work otherwise, and I will probably not touch AI at this level anytime soon. This is basically a brain dump of some of my thoughts, including an explanation of my project so I can have some peace of mind and move on.&lt;br />
&lt;figure >
&lt;img data-src="https://hegzploit.github.io/images/posts/gp/honest_work.jpg" data-caption="" src="data:image/svg+xml,%0A%3Csvg xmlns='http://www.w3.org/2000/svg' width='500px' height='' viewBox='0 0 24 24'%3E%3Cpath fill='none' d='M0 0h24v24H0V0z'/%3E%3Cpath fill='%23aaa' d='M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z'/%3E%3C/svg%3E" class="lazyload" style="width:500px;height:;"/>
&lt;/figure>&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator><media:content url="https://hegzploit.github.io/images/thumbnails/gp.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content><category>misc</category></item><item><title>Hacking the Hackathon: How We Optimized Our Way to Third Place</title><link>https://hegzploit.github.io/posts/hacking-the-hackathon/</link><pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Wed, 15 Mar 2023 00:00:00 +0000</atom:modified><guid>https://hegzploit.github.io/posts/hacking-the-hackathon/</guid><description>&lt;p>Are you ready to put your coding skills to the ultimate test? Hacktrick is the hackathon that combines AI, problem-solving, and cybersecurity to create a thrilling challenge. The landing page promises a rescue mission, but the real magic happens behind the scenes. As the competition heats up, we quickly realize that coding tricks alone won&amp;rsquo;t guarantee a win. The question is, will we figure out the winning formula before the time runs out?&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator><media:content url="https://hegzploit.github.io/images/thumbnails/dell.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>misc</category></item><item><title>Fighting counterfeit USB Flash Drives</title><link>https://hegzploit.github.io/posts/counterfeit-usbs/</link><pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Sun, 10 Apr 2022 00:00:00 +0000</atom:modified><guid>https://hegzploit.github.io/posts/counterfeit-usbs/</guid><description>&lt;h2 id="first-impressions">First Impressions&lt;/h2>
&lt;p>I was really tempted to just plug that bad boy into my main PC, but I was worried It might &lt;a href="https://en.wikipedia.org/wiki/USB_Killer">do something funny&lt;/a>, I didn&amp;rsquo;t rush and instead booted a trusy old HP Pavilion I had around and booted it up, and ran a quick &lt;code>lsblk&lt;/code> to list the devices connected.&lt;/p>
&lt;p>&lt;img src="https://hegzploit.github.io/posts/counterfeit-usbs/lsblk.jpg" alt="">&lt;/p>
&lt;p>We can clearly see that &lt;code>sdb1&lt;/code> with 1.9TBs of storage, but is that all?&lt;/p>
&lt;h2 id="digging-deeper">Digging Deeper&lt;/h2>
&lt;p>Fight Flash Fraud, or rather &lt;a href="https://github.com/AltraMayor/f3">f3&lt;/a>, is a suite of command line utilities that aids in detecting and verifying USB flash drives.&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator><media:content url="https://hegzploit.github.io/images/thumbnails/badusb.png" medium="image"><media:title type="html">featured image</media:title></media:content></item><item><title>Emotion and Logic</title><link>https://hegzploit.github.io/posts/emotion-vs-logic/</link><pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Sun, 27 Mar 2022 00:00:00 +0000</atom:modified><guid>https://hegzploit.github.io/posts/emotion-vs-logic/</guid><description>&lt;p>A lot of people are driven by emotions, logical thinking doesn&amp;rsquo;t always result in agreement, in fact, most people are more influenced by emotions than logic, does that make logical thinking uselss.&lt;/p>
&lt;p>It depends on a lot of factors, you shouldn&amp;rsquo;t boldly assume that logic works with everyone, a good strategy to get your message through might be analyzing the recipient, before deciding on your means of communication.&lt;/p>
&lt;p>That&amp;rsquo;s a useful skill If you have to deal with multitude of different people, life is all about balancing things and overdoing is never wise.&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator><category>thoughts</category></item><item><title>Ways to return function values in C</title><link>https://hegzploit.github.io/posts/passing-values-in-c/</link><pubDate>Fri, 25 Mar 2022 00:00:00 +0000</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Fri, 25 Mar 2022 00:00:00 +0000</atom:modified><guid>https://hegzploit.github.io/posts/passing-values-in-c/</guid><description>&lt;p>I was having a chit-chat with a friend discussing some C language shenanigans&lt;br />
when he sent me a code snippet, he wanted me fix the code and get it to work in&lt;br />
4 different ways.&lt;/p>
&lt;p>Here is the snippet:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-C" data-lang="C">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">calc&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;sum=%d &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sum&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;mult=%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">calc&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">mul&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>There are two main takeaways from the above snippet:&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator></item><item><title>My new blogging workflow</title><link>https://hegzploit.github.io/posts/new-ssg/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Fri, 18 Feb 2022 00:00:00 +0000</atom:modified><guid>https://hegzploit.github.io/posts/new-ssg/</guid><description>&lt;p>I started blogging at 2020 and was using Hugo as my go-to Static Site Generator, It was pretty fast and did the job well (Jekyll yes, I&amp;rsquo;m looking you).&lt;/p>
&lt;p>The process went as follows:&lt;br />
I had two repos, one for the blog config files and the markdown sources of my posts. I then build these files using &lt;code>hugo build&lt;/code> into static HTML pages which I push to another repo that serves my blog through github pages.&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator></item><item><title>Binary Exploitation Resources</title><link>https://hegzploit.github.io/posts/bof-resources/</link><pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Tue, 27 Apr 2021 00:00:00 +0000</atom:modified><guid>https://hegzploit.github.io/posts/bof-resources/</guid><description>&lt;p>These are by far the best resources I have found and &lt;em>have actually tried&lt;/em> since I started learning binary exploitation.&lt;/p>
&lt;p>Don&amp;rsquo;t waste your time choosing which is the best resource, just pick one and start digging in. They are all awesome!&lt;/p>
&lt;h2 id="video">Video&lt;/h2>
&lt;ul>
&lt;li>Dr. Ali Hadi&amp;rsquo;s Offensive Software Exploitation | &lt;a href="https://www.youtube.com/playlist?list=PLCS2zI95IiNybAAQ0HL88YzwRpLXje5y6">English&lt;/a> - &lt;a href="https://www.youtube.com/playlist?list=PLCS2zI95IiNyo5AhbVIL2hVX7zhuSkOkz">Arabic&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PL_yseowcuqYIaReP8ttfr0BAxbqZ7tmhq">Nakerah Network&amp;rsquo;s BOF Playlist - Arabic (Windows)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PL-HprVjV5ZtlPqcpwmAMD3JiFW85wQiV7">Hegzploit - Arabic&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/channel/UClcE-kVhqyiHCcjYwcpfj9w">LiveOverflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/user/GynvaelEN">GynvaelEN&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ippsec.rocks/">Search for topics on ippsec.rocks&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PLLKT__MCUeix3O0DPbmuaRuR_4Hxo4m3G">The Cyber Mentor&amp;rsquo;s Playlist (Windows)&lt;/a> - &lt;a href="https://www.youtube.com/watch?v=ncBblM920jw">New Updated Video&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PLeSXUd883dhg48iGecOxvCieQas1-dsZo">PinkDraconian&amp;rsquo;s Playlist&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PL1H1sBF1VAKVg451vJ-rx0y_ZuQMHPamH">John Hammond&amp;rsquo;s Playlist&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PL1H1sBF1VAKUBfdObXv_MeS4s3n8qwgeU">John Hammond&amp;rsquo;s PicoCTF2022 Binary Exploitation Walkthroughs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=wa3sMSdLyHw&amp;amp;list=PLHUKi1UlEgOIc07Rfk2Jgb5fZbxDPec94">CryptoCat Intro to BinEx&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="full-fledged-courses">Full Fledged Courses&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://pwn.college/">Pwn College&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tc.gts3.org/cs6265/2019/tut/">Georgia Institute of Technology Course&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://guyinatuxedo.github.io/">Guyintuxedo - Nightmare&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="practice-material">Practice Material&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://exploit.education">Exploit Exercises&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picoctf.org/">picoCTF&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pwnable.tw/">pwnable.tw&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://pwnable.kr/">pwnable.kr&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ropemporium.com/">ROP Emporium&lt;/a>&lt;/li>
&lt;/ul></description><dc:creator>Yusuf Hegazy</dc:creator></item><item><title>A Journey into Mathematical Logic: Diophantus of Alexandria</title><link>https://hegzploit.github.io/posts/diophantus/</link><pubDate>Thu, 01 Apr 2021 20:19:31 +0200</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Thu, 01 Apr 2021 20:19:31 +0200</atom:modified><guid>https://hegzploit.github.io/posts/diophantus/</guid><description>&lt;p>In this series of blog posts, I will be discussing some of my favorite topics in math, It mostly falls under the domains of mathematical logic and computability theory.&lt;/p>
&lt;h2 id="diophantus-of-alexandria">Diophantus of Alexandria&lt;/h2>
&lt;p>Diophantus was a Greek mathematician that flourished around 250 AD, he is most famous for his book &amp;ldquo;Arithmetica&amp;rdquo; in which he had compiled 130 algebraic problems among thirteen books where most of their solutions were positive integers, and that&amp;rsquo;s why mathematicians call such algebraic equations as &amp;ldquo;Diophantine Equations&amp;rdquo;.&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator><media:content url="https://hegzploit.github.io/images/header/diophantus_header.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>math</category></item><item><title>Buffer Overflows for Newbies</title><link>https://hegzploit.github.io/posts/bof-for-normies/</link><pubDate>Mon, 30 Nov 2020 02:46:12 +0200</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Mon, 30 Nov 2020 02:46:12 +0200</atom:modified><guid>https://hegzploit.github.io/posts/bof-for-normies/</guid><description>&lt;p>&lt;img src="https://hegzploit.github.io/posts/bof-for-normies/header.png" alt="&amp;ldquo;A picture of a leaking bucket that contains water as an analogue to buffer overflows.&amp;rdquo;">&lt;/p>
&lt;h2 id="what-is-a-buffer-anyway">What is a Buffer anyway?&lt;/h2>
&lt;p>We can think of buffers as containers to hold our data for later use, it&amp;rsquo;s not really something specific to computer science; In fact, we have buffers in electronics, mechanics, chemistry and even politics!&lt;/p>
&lt;p>We can say that the word buffer is just a fancy name for a placeholder (temporary storage)!&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator><media:content url="https://hegzploit.github.io/images/header/bof_for_normies_header.png" medium="image"><media:title type="html">featured image</media:title></media:content></item><item><title>My Favorite Linux Distro</title><link>https://hegzploit.github.io/posts/distro/</link><pubDate>Sun, 27 Sep 2020 23:27:38 +0200</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Sun, 27 Sep 2020 23:27:38 +0200</atom:modified><guid>https://hegzploit.github.io/posts/distro/</guid><description>&lt;p>Now, that&amp;rsquo;s a bit misleading since i have been using windows for the past 12-13 years of my keyboard smashing journey but i don&amp;rsquo;t really feel any guilt doing this, in fact windows is nothing more of a bottleneck to me &lt;em>or so have i figured later&lt;/em>.&lt;/p>
&lt;p>enough ranting, maybe this needs it&amp;rsquo;s own blog post after all &lt;em>or maybe not&lt;/em>, it&amp;rsquo;s a highly controversial topic whatsoever. Just believe me windows is pure evil.&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator><category>linux</category></item><item><title>Optimizing Recursion</title><link>https://hegzploit.github.io/posts/recursion/</link><pubDate>Thu, 24 Sep 2020 15:52:30 +0200</pubDate><author>me (AT) this domain (Yusuf Hegazy)</author><atom:modified>Thu, 24 Sep 2020 15:52:30 +0200</atom:modified><guid>https://hegzploit.github.io/posts/recursion/</guid><description>&lt;p>In this blog post i will try to explain the basic concept of recursion and then show why recursion can be so inefficient and how to optimize it using &lt;strong>Call Tail Optimization!&lt;/strong>&lt;/p>
&lt;h2 id="normal-recursion-a-factorial-example">Normal Recursion, A Factorial Example&lt;/h2>
&lt;p>Most of us tech nerds have already dealt with the good &amp;lsquo;ol recursion, let&amp;rsquo;s refresh our understanding using the iconic factorial program.&lt;br />
$$0! = 1$$&lt;br />
$$n! = n (n-1)!$$&lt;br />
Python Implementation:&lt;/p></description><dc:creator>Yusuf Hegazy</dc:creator><media:content url="https://hegzploit.github.io/images/header/recursion_header.png" medium="image"><media:title type="html">featured image</media:title></media:content></item></channel></rss>